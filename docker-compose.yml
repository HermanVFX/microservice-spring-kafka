version: "3"
services:
# DataBase
# - PostgreSQL database
  postgres-db:
    image: postgres:15.1
    container_name: postgres-db
    restart: unless-stopped
#    networks:
#      - my-network
    environment:
      POSTGRES_USER: postgres_user
      POSTGRES_PASSWORD: "172440"
      POSTGRES_DB: postgres
    volumes:
      - ./postgres/create_db.sql:/docker-entrypoint-initdb.d/create_db.sql
      - pgdata:/var/lib/postgresql/data
    ports:
      - "5433:5432"
# - Mongo database
  mongo_db:
    image: "mongo:4.4.3"
    container_name: mongo-db
    restart: always
#    networks:
#      - my-network
    environment:
      MONGO_INITDB_ROOT_USERNAME: mongo
      MONGO_INITDB_ROOT_PASSWORD: "172440"
    ports:
      - "27017:27017"
# - Kafka database
  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    container_name: zookeeper
#    networks:
#      - my-network
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - 22181:2181

  kafka:
    image: confluentinc/cp-kafka:latest
    container_name: kafka
    depends_on:
      - zookeeper
#    networks:
#      - my-network
    ports:
      - 29092:29092
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092,PLAINTEXT_HOST://localhost:29092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
# Services
# User-service
  user-service:
    build: ./user-service
    container_name: user-service
#    networks:
#      - my-network
    environment:
      SPRING_PROFILES_ACTIVE: docker
      DB_URL: jdbc:postgresql://postgres-db:5432/postgres?currentSchema=user-service
      DB_USER: postgres_user
      DB_PASSWORD: 172440
    ports:
      - "8080:8080"
    depends_on:
      - postgres-db
# Department-service
  department-service:
    build: ./department-service
    container_name: department-service
#    networks:
#      - my-network
    environment:
      SPRING_PROFILES_ACTIVE: docker
#      SPRING_DATA_MONGODB_AUTHENTICATION_DATABASE: $MONGO_DB
#      SPRING_DATA_MONGODB_AUTO_INDEX_CREATION: $MONGO_AUTO_INDEX_CREATION
      SPRING_DATA_MONGODB_HOST: mongo_db
      SPRING_DATA_MONGODB_PORT: 27017
      SPRING_DATA_MONGODB_USERNAME: mongo
      SPRING_DATA_MONGODB_PASSWORD: "172440"
      SPRING_DATA_MONGODB_DATABASE: department-service
    ports:
      - "8081:8081"
    depends_on:
      - mongo_db
#networks:
#  my-network:
volumes:
  pgdata: